"use strict";(self.webpackChunkdocumentation_website=self.webpackChunkdocumentation_website||[]).push([[194],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return d}});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function u(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=r.createContext({}),l=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=l(e.components);return r.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,c=u(e,["components","mdxType","originalType","parentName"]),m=l(n),d=i,g=m["".concat(s,".").concat(d)]||m[d]||p[d]||o;return n?r.createElement(g,a(a({ref:t},c),{},{components:n})):r.createElement(g,a({ref:t},c))}));function d(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=m;var u={};for(var s in t)hasOwnProperty.call(t,s)&&(u[s]=t[s]);u.originalType=e,u.mdxType="string"==typeof e?e:i,a[1]=u;for(var l=2;l<o;l++)a[l]=n[l];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},8151:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return u},contentTitle:function(){return s},metadata:function(){return l},toc:function(){return c},default:function(){return m}});var r=n(7462),i=n(3366),o=(n(7294),n(3905)),a=["components"],u={id:"Maintainer Guidelines",title:"Maintainer Guidelines"},s=void 0,l={unversionedId:"How to Contribute/Maintainer Guidelines",id:"How to Contribute/Maintainer Guidelines",isDocsHomePage:!1,title:"Maintainer Guidelines",description:"Guidelines",source:"@site/docs/How to Contribute/Maintainer Guidelines.md",sourceDirName:"How to Contribute",slug:"/How to Contribute/Maintainer Guidelines",permalink:"/Docusaurus/docs/How to Contribute/Maintainer Guidelines",editUrl:"https://github.com/anitab-org/mentorship-android/tree/develop/docs/docs/How to Contribute/Maintainer Guidelines.md",version:"current",frontMatter:{id:"Maintainer Guidelines",title:"Maintainer Guidelines"},sidebar:"docs",previous:{title:"Test the Android app",permalink:"/Docusaurus/docs/How to Contribute/Test the Android app"},next:{title:"Design Contributuions",permalink:"/Docusaurus/docs/How to Contribute/Design Contributions"}},c=[{value:"Guidelines",id:"guidelines",children:[]},{value:"Code Review",id:"code-review",children:[]},{value:"Merging PRs",id:"merging-prs",children:[]}],p={toc:c};function m(e){var t=e.components,n=(0,i.Z)(e,a);return(0,o.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"guidelines"},"Guidelines"),(0,o.kt)("p",null,"Make sure contributors are respecting the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/anitab-org/mentorship-android/blob/develop/.github/CONTRIBUTING.md"},"Contribution Guidelines"),".\nIf they don't let them know about it: what is missing, what was disrespected?"),(0,o.kt)("h2",{id:"code-review"},"Code Review"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"When possible get a second opinion before merging."),(0,o.kt)("li",{parentName:"ul"},"Make sure the PR has a link to the issue."),(0,o.kt)("li",{parentName:"ul"},"If you can, let them know why your change request makes sense."),(0,o.kt)("li",{parentName:"ul"},"(nice to have) If you have time, thank them for contributing to the project.")),(0,o.kt)("h2",{id:"merging-prs"},"Merging PRs"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"TL;DR:")),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},'Select "Squash and Merge".'),(0,o.kt)("li",{parentName:"ol"},"Edit commit if necessary to follow our ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/anitab-org/mentorship-backend/wiki/Commit-Message-Style-Guide"},"style guide")," and leave the PR id in the message.")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Long version:")),(0,o.kt)("p",null,'About merging pull requests (PRs), to keep the project commit history clean, it\'s important to have all commits from a PR to be squashed when merging. For this you may have to select "Squash and Merge" option:'),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/11148726/76369025-06146e80-632a-11ea-922a-c28073539125.png",alt:"Squash and Merge option on GitHub"})),(0,o.kt)("p",null,"If the commit does not follow our ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/anitab-org/mentorship-backend/wiki/Commit-Message-Style-Guide"},"Commit Message Style Guide"),", make sure to ask the contributor to fix it ",(0,o.kt)("strong",{parentName:"p"},"or")," you can fix it when merging."),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/11148726/76369362-33155100-632b-11ea-90d1-879dbecfb059.png",alt:"Editing commit when merging"})),(0,o.kt)("p",null,"Make sure to always leave the PR identifier, so that we can traceback a commit to a specific PR."))}m.isMDXComponent=!0}}]);