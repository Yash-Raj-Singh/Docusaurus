"use strict";(self.webpackChunkdocumentation_website=self.webpackChunkdocumentation_website||[]).push([[52],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=c(n),m=o,h=p["".concat(s,".").concat(m)]||p[m]||d[m]||i;return n?r.createElement(h,a(a({ref:t},u),{},{components:n})):r.createElement(h,a({ref:t},u))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=p;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,a[1]=l;for(var c=2;c<i;c++)a[c]=n[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},9535:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return c},toc:function(){return u},default:function(){return p}});var r=n(7462),o=n(3366),i=(n(7294),n(3905)),a=["components"],l={id:"Commit Message Style Guide",title:"Commit Message Style Guide"},s=void 0,c={unversionedId:"How to Contribute/Commit Message Style Guide",id:"How to Contribute/Commit Message Style Guide",isDocsHomePage:!1,title:"Commit Message Style Guide",description:"Commit Message Structure",source:"@site/docs/How to Contribute/Commit Message Style Guide.md",sourceDirName:"How to Contribute",slug:"/How to Contribute/Commit Message Style Guide",permalink:"/Docusaurus/docs/How to Contribute/Commit Message Style Guide",editUrl:"https://github.com/anitab-org/mentorship-android/tree/develop/docs/docs/How to Contribute/Commit Message Style Guide.md",version:"current",frontMatter:{id:"Commit Message Style Guide",title:"Commit Message Style Guide"},sidebar:"docs",previous:{title:"Getting Started",permalink:"/Docusaurus/docs/Getting Started"},next:{title:"Test the Android app",permalink:"/Docusaurus/docs/How to Contribute/Test the Android app"}},u=[{value:"Commit Message Structure",id:"commit-message-structure",children:[]},{value:"Title",id:"title",children:[]},{value:"Body",id:"body",children:[]}],d={toc:u};function p(e){var t=e.components,n=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"commit-message-structure"},"Commit Message Structure"),(0,i.kt)("p",null,"A commit message should consist of two distinct parts separated by a blank line: the ",(0,i.kt)("inlineCode",{parentName:"p"},"title")," and an optional ",(0,i.kt)("inlineCode",{parentName:"p"},"body"),". The layout looks like this:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"type: subject\n\nbody\n")),(0,i.kt)("h2",{id:"title"},"Title"),(0,i.kt)("p",null,"The title should consist of the ",(0,i.kt)("inlineCode",{parentName:"p"},"type")," of the change and ",(0,i.kt)("inlineCode",{parentName:"p"},"subject")," separated by a colon ",(0,i.kt)("inlineCode",{parentName:"p"},":"),". Title should be no longer than 50 characters."),(0,i.kt)("h4",{id:"type"},"Type"),(0,i.kt)("p",null,"The type is contained within the title and can be one of these types:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"feat"),": a new feature"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"fix"),": a bug fix"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"docs"),": changes to documentation"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"style"),": formatting, missing semi colons, etc; no code change"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"refactor"),": refactoring production code"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"test"),": adding tests, refactoring test; no production code change"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"chore"),": updating build tasks, package manager configs, etc; no production code change")),(0,i.kt)("h4",{id:"subject"},"Subject"),(0,i.kt)("p",null,"Should begin with a capital letter and not end with a period."),(0,i.kt)("p",null,"Use an imperative tone to describe what a commit does, rather than what it did. For example, use change; not changed or changes."),(0,i.kt)("h2",{id:"body"},"Body"),(0,i.kt)("p",null,"If the changes made in a commit are complex, they should be explained in the commit body. Use the body to explain the what and why of a commit, not the how."),(0,i.kt)("p",null,"When writing a body, the blank line between the title and the body is required and you should limit the length of each line to no more than 72 characters."),(0,i.kt)("h4",{id:"examples"},"Examples"),(0,i.kt)("p",null,"Without body"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"docs: update screenshots in the documentation\n")),(0,i.kt)("p",null,"or"),(0,i.kt)("p",null,"With body"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"fix: fix crash caused by new libraries \n\nAfter merging PRs #126 and #130 crashes were occurring. \nThese crashes were because of deprecated functions. \nFound a solution here (https://stackoverflow.com/questions/22718185) \nThis will resolve issue #140\n")))}p.isMDXComponent=!0}}]);